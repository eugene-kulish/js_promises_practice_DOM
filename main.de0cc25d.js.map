{"version":3,"sources":["scripts/main.js"],"names":["appendNotification","number","result","notification","document","createElement","dataset","qa","className","classList","add","toLowerCase","innerText","body","append","firstPromise","Promise","resolve","reject","addEventListener","setTimeout","secondPromise","race","thirdPromise","all","then","promiseNumber","catch"],"mappings":";AAAA,aAEA,SAASA,EAAmBC,EAAQC,GAC5BC,IAAAA,EAAeC,SAASC,cAAc,OAE5CF,EAAaG,QAAQC,GAAK,eAE1BJ,EAAaK,UACVN,gBAAAA,OAAW,YAAXA,EAAwB,UAAY,WAGvCC,EAAaM,UAAUC,IAAIT,EAAOU,eAElCR,EAAaS,UAAeX,GAAAA,OAAAA,EACzBC,iBAAAA,OAAW,YAAXA,EAAwB,WAAa,YAGxCE,SAASS,KAAKC,OAAOX,GAGvB,IAAMY,EAAe,IAAIC,QAAQ,SAACC,EAASC,GAGzCd,SAASe,iBAAiB,QAAS,WACjCF,EAHoB,WAMtBG,WAAW,WAAMF,OAAAA,EANK,UAMkB,OAGpCG,EAAgBL,QAAQM,KAAK,CACjC,IAAIN,QAAQ,SAAAC,GAGVb,SAASe,iBAAiB,QAAS,WACjCF,EAHoB,cAOxB,IAAID,QAAQ,SAAAC,GAGVb,SAASe,iBAAiB,cAAe,WACvCF,EAHoB,gBAQpBM,EAAeP,QAAQQ,IAAI,CAC/B,IAAIR,QAAQ,SAAAC,GAGVb,SAASe,iBAAiB,QAAS,WACjCF,EAHoB,aAOxB,IAAID,QAAQ,SAAAC,GAGVb,SAASe,iBAAiB,cAAe,WACvCF,EAHoB,eAQ1BF,EACGU,KAAK,SAAAC,GAAiB1B,OAAAA,EAAmB0B,EAAe,aACxDC,MAAM,SAAAD,GAAiB1B,OAAAA,EAAmB0B,EAAe,WAE5DL,EACGI,KAAK,SAAAC,GAAiB1B,OAAAA,EAAmB0B,EAAe,aACxDC,MAAM,SAAAD,GAAiB1B,OAAAA,EAAmB0B,EAAe,WAE5DH,EACGE,KAAK,SAAAC,GAAiB1B,OAAAA,EAAmB0B,EAAc,GAAI,aAC3DC,MAAM,SAAAD,GAAiB1B,OAAAA,EAAmB0B,EAAc,GAAI","file":"main.de0cc25d.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nfunction appendNotification(number, result) {\n  const notification = document.createElement('div');\n\n  notification.dataset.qa = 'notification';\n\n  notification.className = `notification ${\n    (result === 'success') ? 'success' : 'warning'\n  }`;\n\n  notification.classList.add(number.toLowerCase());\n\n  notification.innerText = `${number} promise was ${\n    (result === 'success') ? 'resolved' : 'rejected'\n  }`;\n\n  document.body.append(notification);\n}\n\nconst firstPromise = new Promise((resolve, reject) => {\n  const promiseNumber = 'First';\n\n  document.addEventListener('click', () => {\n    resolve(promiseNumber);\n  });\n\n  setTimeout(() => reject(promiseNumber), 3000);\n});\n\nconst secondPromise = Promise.race([\n  new Promise(resolve => {\n    const promiseNumber = 'Second';\n\n    document.addEventListener('click', () => {\n      resolve(promiseNumber);\n    });\n  }),\n\n  new Promise(resolve => {\n    const promiseNumber = 'Second';\n\n    document.addEventListener('contextmenu', () => {\n      resolve(promiseNumber);\n    });\n  }),\n]);\n\nconst thirdPromise = Promise.all([\n  new Promise(resolve => {\n    const promiseNumber = 'Third';\n\n    document.addEventListener('click', () => {\n      resolve(promiseNumber);\n    });\n  }),\n\n  new Promise(resolve => {\n    const promiseNumber = 'Third';\n\n    document.addEventListener('contextmenu', () => {\n      resolve(promiseNumber);\n    });\n  }),\n]);\n\nfirstPromise\n  .then(promiseNumber => appendNotification(promiseNumber, 'success'))\n  .catch(promiseNumber => appendNotification(promiseNumber, 'error'));\n\nsecondPromise\n  .then(promiseNumber => appendNotification(promiseNumber, 'success'))\n  .catch(promiseNumber => appendNotification(promiseNumber, 'error'));\n\nthirdPromise\n  .then(promiseNumber => appendNotification(promiseNumber[0], 'success'))\n  .catch(promiseNumber => appendNotification(promiseNumber[0], 'error'));\n"]}